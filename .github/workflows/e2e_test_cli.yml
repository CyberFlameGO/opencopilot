name: E2E Test Linux CLI

on:
  push:
    branches: [ main, reconfigure-ci ]

jobs:
  e2e-test-linux-cli:
    runs-on: nftport-ubuntu-4core
    strategy:
      max-parallel: 5

    steps:
      - uses: actions/checkout@v3
      - name: "Set up Python 3.10"
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: "Add conda to system path"
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: "Install SDK"
        run: |
          pip install -e .
          opencopilot --help
      - name: "Create Copilot"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          HELICONE_API_KEY: ${{ secrets.HELICONE_API_KEY }}
        run: |
          printf "1\n$OPENAI_API_KEY\ny\nCopilotName\n" | opencopilot create
          echo "HELICONE_API_KEY = \"$HELICONE_API_KEY\"" >> backend/.env
      - name: "Start Copilot"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          opencopilot start
      - name: "Chat Copilot"
        run: |
          opencopilot chat "Hello"
      - name: "Test Backend"
        run: |
          cd backend && PYTHONPATH=. python tests/e2e/test_backend.py
      - name: "Restart Copilot"
        run: |
          echo "Kaspar is frontend engineer\nKreÅ¡imir is backend engineer" > copilots/copilotname/data/company_data.txt
          opencopilot restart
      - name: "Chat after data change"
        run: |
          cd backend && PYTHONPATH=. python tests/e2e/test_chat_after_data_change.py
      - name: "Stop Copilot"
        run: |
          opencopilot stop
      - name: "Test is copilot stopped"
        run: |
          num_containers=$(docker ps -q | wc -l)
          echo "num_containers: $num_containers"
          if [ $num_containers -gt 0 ]; then exit 1; fi;
          
