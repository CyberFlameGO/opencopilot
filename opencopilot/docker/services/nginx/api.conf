
upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server web:8000 fail_timeout=0;
  }


server {
    client_max_body_size 50M;
    fastcgi_read_timeout 300;
    proxy_read_timeout 300;

    listen 3000;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_buffering off;

      proxy_pass http://app_server;
    }

    location /nginx_status {
      stub_status on;
      access_log on;
    }

    location /agent_files/ {
      charset utf-8;
      alias  /agent_files/;
    }

    location /metrics {
      allow 10.132.0.0/20;
      deny all;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_buffering off;

      proxy_pass http://app_server;
    }

    error_log /usr/share/nginx/error.log;
    access_log /usr/share/nginx/access.log combined buffer=256k flush=10s;

    error_page 500 /500.json;
    location /500.json{
        internal;
        return 500 '{"error": {"status_code": 500, "code": "internal_server_error", "message": "The request could not be completed due to an internal server error."}}';
    }

    error_page 502 /502.json;
    location /502.json{
        internal;
        return 502 '{"error": {"status_code": 502, "code": "bad_gateway", "message": "The request could not be completed due to the server receiving an invalid response from an inbound server it accessed while attempting to fulfill the request."}}';
    }

    error_page 503 /503.json;
    location /503.json{
        internal;
        return 503 '{"error": {"status_code": 503, "code": "service_unavailable", "message": "Service is temporarily unavailable. Please try again after some time."}}';
    }

    error_page 400 /400.json;
    location /400.json{
        internal;
        return 400 '{"error": {"status_code": 400, "code": "bad_request", "message": "The server was unable to process the request sent by the client due to invalid syntax."}}';
    }

    error_page 404 /404.json;
    location /404.json{
        internal;
        return 404 '{"error": {"status_code": 404, "code": "not_found", "message": "Not found."}}';
    }
}
